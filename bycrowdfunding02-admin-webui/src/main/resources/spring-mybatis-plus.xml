<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.by"/>
    <!-- 解析db.properties 因为 db.properties里面有username=root 如果在下面的数据源中使用${username}它取到的是当前系统的登陆名
        如果要使用db.properties里面的username必须加system-properties-mode="FALLBACK"这个属性 -->
    <context:property-placeholder location="classpath:db.properties" system-properties-mode="FALLBACK" />

    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
    </bean>
        <!-- 配置sqlSessinoFactory -->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
                <!-- 配置实体扫描路径，多个package可以用分号; 逗号, 分隔， 支持通配符* -->
                <!-- com.a.b.entity;com.a.c.entity;com.d.*.entity -->
        <property name="typeAliasesPackage" value="com.by.model" />

        <property name="configuration" ref="mybatisConfig" />
                <!-- 自定义mapper映射的位置 -->
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
                <!-- MP 全局配置注入 -->
        <property name="plugins">
            <array>
            <!-- 分页插件配置 -->
            <bean id="paginationInterceptor"
            class="com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor" />
            <!-- 乐观锁插件 -->
            <bean id="optimisticLockerInterceptor"
            class="com.baomidou.mybatisplus.extension.plugins.OptimisticLockerInterceptor">
            </bean>
            <!-- 性能拦截器，兼打印sql，不建议生产环境配置
            <bean id="performanceInterceptor"
            class="com.baomidou.mybatisplus.extension.plugins.PerformanceInterceptor" />-->
            </array>
        </property>
    </bean>
    <bean id="mybatisConfig" class="com.baomidou.mybatisplus.core.MybatisConfiguration">
        <property name="mapUnderscoreToCamelCase" value="true" />
    </bean>
        <!-- 定义 MP 全局策略 -->
<!--    <bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">4
            &lt;!&ndash; 逻辑删除 定义下面3个参数 &ndash;&gt;
                &lt;!&ndash; <property name="sqlInjector" ref="logicSqlInjector" /> &ndash;&gt;
        <property name="logicDeleteValue" value="-1" />
        <property name="logicNotDeleteValue" value="1" />
                &lt;!&ndash; 全局ID类型： 0, "数据库ID自增"， 1, "用户输入ID", 2, "全局唯一ID", 3, "全局唯一ID" &ndash;&gt;
        <property name="idType" value="0" />-->
            <!-- 2.1-gamma+ 数据库自动识别，无需配置数据库类型 <property name="dbType" value="mysql"
                /> -->
            <!-- 2.3+ 全局表前缀 mp_ <property name="tablePrefix" value="mp_" /> -->
            <!--主键Sequence -->
            <!-- <property name="keyGenerator" ref="keyGenerator" /> -->
            <!-- 公共字段填充处理器 -->
            <!-- <property name="metaObjectHandler" ref="myMetaObjectHandler" /> -->
            <!--数据库关键字转义符，'desc', "desc" 2.1-gamma+不需要制定 -->
            <!--<property name="identifierQuote" value="'" /> -->
<!--    </bean>-->
        <!-- 配置oracle主键Sequence， 其他类型数据库，请配置相应的类型 -->
        <!-- <bean id="keyGenerator" class="com.baomidou.mybatisplus.incrementer.OracleKeyGenerator"
            /> -->
        <!-- 自定义处理器 -->
        <!-- <bean id="myMetaObjectHandler" class="com.baomidou.test.MyMetaObjectHandler"
            /> -->
        <!-- 逻辑删除Sql注入器 -->
        <!-- <bean id="logicSqlInjector" class="com.baomidou.mybatisplus.mapper.LogicSqlInjector"
            /> -->
        <!-- 配置mybatis 扫描mapper接口的路径, 相当于注解@MapperScan，@MapperScan("com.baomidou.mybatisplus.test.h2.entity.mapper") -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.by.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
</beans>